/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.35).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Category;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-10-28T23:49:44.684Z[GMT]")
@Validated
public interface CategoriesApi {

    @Operation(summary = "List all categories", description = "Returns the list of categories supported by EasyShop", security = {
        @SecurityRequirement(name = "BasicAuth")    }, tags={ "Categories" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "A list of categories", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Category.class)))),
        
        @ApiResponse(responseCode = "500", description = "An error occured while processing the request. Please contact support@eazyshop.com ") })
    @RequestMapping(value = "/categories",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Category>> getAllCategories(@Min(1) @Max(1000) @Parameter(in = ParameterIn.QUERY, description = "" ,schema=@Schema(allowableValues={  }, minimum="1", maximum="1000"
)) @Valid @RequestParam(value = "categoryId", required = false) Integer categoryId);


    @Operation(summary = "Select category by Id", description = "", tags={ "Categories" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Category.class))),
        
        @ApiResponse(responseCode = "500", description = "An error occured while processing the request. Please contact support@eazyshop.com ") })
    @RequestMapping(value = "/categories/{categoryId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Category> getCategoryDetails(@Parameter(in = ParameterIn.PATH, description = "", required=true, schema=@Schema()) @PathVariable("categoryId") Integer categoryId);

}

